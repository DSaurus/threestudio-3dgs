name: "gs-sds-generation"
tag: "${rmspace:${system.prompt_processor.prompt},_}"
exp_root_dir: "outputs"
seed: 0

data_type: "random-camera-datamodule"
data:
  batch_size: 4
  width: 512
  height: 512
  camera_distance_range: [2.5, 2.5]
  fovy_range: [60, 70]
  elevation_range: [-20, 90]
  light_sample_strategy: "dreamfusion"
  eval_camera_distance: 2.5
  eval_fovy_deg: 70
  rays_d_normalize: false

system_type: "gaussian-splatting-system"
system:

  geometry_type: "gaussian-splatting"
  geometry:
    position_lr: [0, 0.001, 0.00002, 1000]
    scale_lr: 0.005
    feature_lr: 0.01
    opacity_lr: 0.05
    rotation_lr: 0.005
    densification_interval: 500
    prune_interval: 500
    opacity_reset_interval: 50000000
    densify_from_iter: 0
    densify_until_iter: 10000
    prune_from_iter: 1000
    prune_until_iter: ${trainer.max_steps}
    densify_grad_threshold: 0.01
    min_opac_prune: 0.005
    split_thresh: 0.02
    radii2d_thresh: 1000

    init_num_pts: 4096
    pc_init_radius: 0.8
    opacity_init: 0.2

  renderer_type: "diff-gaussian-rasterizer"
  renderer:
    debug: false
    invert_bg_prob: 0.5

  material_type: "no-material" # unused
  material:
    n_output_dims: 0

  background_type: "solid-color-background" # unused

  prompt_processor_type: "stable-diffusion-prompt-processor"
  prompt_processor:
    pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-1-base"
    prompt: ???

  guidance_type: "stable-diffusion-guidance"
  guidance:
    pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-1-base"
    guidance_scale: 100.0
    weighting_strategy: sds
    min_step_percent: 0.02
    max_step_percent: [1000, 0.98, 0.5, 1001]

  exporter_type: "gaussian-mesh-exporter"

  loggers:
    wandb:
      enable: false
      project: 'threestudio'
      name: None

  loss:
    lambda_sds: 0.1
    lambda_position: 1.0
    lambda_opacity: 0.0001
    lambda_scales: 0.0001
    lambda_tv_loss: 1.0
    lambda_depth_tv_loss: 1.0

trainer:
  max_steps: 10000
  log_every_n_steps: 1
  num_sanity_val_steps: 0
  val_check_interval: 100
  enable_progress_bar: true
  precision: 32-true

checkpoint:
  save_last: true # save at each validation time
  save_top_k: -1
  every_n_train_steps: ${trainer.max_steps}
